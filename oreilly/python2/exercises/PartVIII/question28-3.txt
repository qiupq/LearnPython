if not hasattr(self.data[0], '__len__'): # It's probably a number (1D).
    xmin, xmax = 0, N-1
# Code from existing program, up to graphics.fillPolygon(xs, ys, len(xs))
elif len(self.data[0]) == 2: # we'll only deal with 2-D
    xmin = reduce(min, map(lambda d: d[0], self.data))
    xmax = reduce(max, map(lambda d: d[0], self.data))

    ymin = reduce(min, map(lambda d: d[1], self.data))
    ymax = reduce(max, map(lambda d: d[1], self.data))

    zero_y = y_offset - int(-ymin/(ymax-ymin)*height)
    zero_x = x_offset + int(-xmin/(xmax-xmin)*width)

    for i in range(N):
        xs[i] = x_offset + int((self.data[i][0]-xmin)/(xmax-xmin)*width)
        ys[i] = y_offset - int((self.data[i][1]-ymin)/(ymax-ymin)*height)
    graphics.color = self.color
    if self.style == "Line":
        graphics.drawPolyline(xs, ys, len(xs))
    else:
        xs.append(xs[0]); ys.append(ys[0])
        graphics.fillPolygon(xs, ys, len(xs))