>>> 'knight"s', "knight's"
('knight"s', "knight's")

>>> title = "Meaning " 'of' " Life"
>>> title
'Meaning of Life'

>>> 'knight\'s', "knight\"s"
("knight's", 'knight"s')

>>> s = 'a\nb\tc'>>> s
'a\nb\tc'
>>> print s
a
b       c
>>> len(s)
5

>>> s = 'a\0b\0c'
>>> s
'a\x00b\x00c'
>>> len(s)
5

>>> s = '\001\002\x03'
>>> s
'\x01\x02\x03'
>>> len(s)
3

>>> x = "C:\py\code"     # keeps \ literally
>>> x
'C:\\py\\code'
>>> len(x)
10

>>> path = r'C:\new\text.dat'
>>> path                          # show as Python code
'C:\\new\\text.dat'
>>> print path                    # user-friendly format
C:\new\text.dat
>>> len(path)                     # string length
15

>>> mantra = """Always look
...  on the bright
... side of life."""
>>>
>>> mantra
'Always look\n on the bright\nside of life.'

>>> 'ni' + u'spam'        # mixed string types
u'nispam'

>>> str(u'spam')          # unicode to normal
'spam'
>>> unicode('spam')       # normal to unicode
u'spam'

>>> u'ab\x20cd'           # 8-bit/1-byte characters
u'ab cd'
>>> u'ab\u0020cd'         # 2-byte characters
u'ab cd'
>>> u'ab\U00000020cd'     # 4-byte characters
u'ab cd'




>>> len('abc')         # length: number items 
3
>>> 'abc' + 'def'      # concatenation: a new string
'abcdef'
>>> 'Ni!' * 4          # repitition: like "Ni!" + "Ni!" + ...
'Ni!Ni!Ni!Ni!'

>>> print '-'*80                    # 80 dashes, the easy way

>>> myjob = "hacker"
>>> for c in myjob: print c,       # step though items
...
h a c k e r
>>> "k" in myjob                   # 1 means true (found)
1
>>> "z" in myjob                   # 0 means false (not found)
0




>>> S = 'spam'
>>> S[0], S[-2]               # indexing from front or end
('s', 'a')
>>> S[1:3], S[1:], S[:-1]     # slicing: extract section
('pa', 'pam', 'spa')




# File echo.py
import sys
print sys.argv

% python echo.py -a -b -c
['echo.py', '-a', '-b', '-c']




>>> int("42"), str(42)         # convert from/to string
(42, '42')
>>> string.atoi("42"), `42`    # same, but older techniques
(42, '42')

>>> int("42") + 1            # force addition
43
>>> "spam" + str(42)         # force concatenation
'spam42'

>>> str(3.1415), float("1.5")
('3.1415', 1.5)

>>> text = "1.234E-10"
>>> float(text)
1.2340000000000001e-010




>>> S = S + 'SPAM!'       # to change a string, make a new one
>>> S
'spamSPAM!'
>>> S = S[:4] + 'Burger' + S[-1]
>>> S
'spamBurger!'

>>> 'That is %d %s bird!' % (1, 'dead')    # like C sprintf
That is 1 dead bird!




>>> exclamation = "Ni"
>>> "The knights who say %s!" % exclamation
'The knights who say Ni!'

>>> "%d %s %d you" % (1, 'spam', 4)
'1 spam 4 you'

>>> "%s -- %s -- %s" % (42, 3.14159, [1, 2, 3])
'42 -- 3.14159 -- [1, 2, 3]'

>>> x = 1234
>>> res = "integers: ...%d...%-6d...%06d" % (x, x, x)
>>> res
'integers: ...1234...1234  ...001234'

>>> x = 1.23456789
>>> x
1.2345678899999999

>>> '%e | %f | %g' % (x, x, x)
'1.234568e+000 | 1.234568 | 1.23457'

>>> '%-6.2f | %05.2f | %+06.1f' % (x, x, x)
'1.23   | 01.23 | +001.2'

>>> "%s" % x, str(x)
('1.23456789', '1.23456789')

>>> "%(n)d %(x)s" % {"n":1, "x":"spam"}
'1 spam'

>>> food = 'spam'
>>> age = 40
>>> vars()
{'food': 'spam', 'age': 40, …many more… }

>>> "%(age)d %(food)s" % vars()
'40 spam'




>>> S = 'spammy'
>>> S = S[:3] + 'xx' + S[5:]
>>> S
'spaxxy'

>>> S = 'spammy'
>>> S = S.replace('mm', 'xx')
>>> S
'spaxxy'

>>> 'aa$bb$cc$dd'.replace('$', 'SPAM')
'aaSPAMbbSPAMccSPAMdd'

>>> S = 'xxxxSPAMxxxxSPAMxxxx'
>>> where = S.find('SPAM')          # search for position
>>> where                           # occurs at offset 4
4
>>> S = S[:where] + 'EGGS' + S[(where+4):]
>>> S
'xxxxEGGSxxxxSPAMxxxx'

>>> S = 'xxxxSPAMxxxxSPAMxxxx'
>>> S.replace('SPAM', 'EGGS')           # replace all
'xxxxEGGSxxxxEGGSxxxx'

>>> S.replace('SPAM', 'EGGS', 1)        # replace one
'xxxxEGGSxxxxSPAMxxxx'

>>> S = 'spammy'
>>> L = list(S)
>>> L
['s', 'p', 'a', 'm', 'm', 'y']

>>> L[3] = 'x'              # works for lists, not strings
>>> L[4] = 'x'
>>> L
['s', 'p', 'a', 'x', 'x', 'y']

>>> S = ''.join(L)
>>> S
'spaxxy'

>>> 'SPAM'.join(['eggs', 'sausage', 'ham', 'toast'])
'eggsSPAMsausageSPAMhamSPAMtoast'




>>> line = 'aaa bbb ccc'
>>> col1 = line[0:3]
>>> col3 = line[8:]
>>> col1
'aaa'
>>> col3
'ccc'

>>> line = 'aaa bbb   ccc'
>>> cols = line.split()
>>> cols
['aaa', 'bbb', 'ccc']

>>> line = 'bob,hacker,40'
>>> line.split(',')
['bob', 'hacker', '40']

>>> line = "i'mSPAMaSPAMlumberjack"
>>> line.split("SPAM")
["i'm", 'a', 'lumberjack']




>>> S = 'a+b+c+'
>>> x = S.replace('+', 'spam')
>>> x
'aspambspamcspam'

>>> import string
>>> y = string.replace(S, '+', 'spam')
>>> y
'aspambspamcspam'


