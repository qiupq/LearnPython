from Numeric import *              
coords = arange(-6, 6, .02)               # create a range of coordinates
xs = sin(coords)                          # take the sine of all of the x's
ys = cos(coords)*exp(-coords*coords/18.0) # take a complex function of the y's
zx = xs * ys[:,NewAxis]                   # multiply the x row with the y column




import pygame
pygame.cdrom.init()
cd_object = pygame.cdrom.CD(pygame.cdrom.get_count()-1)
cd_object.init()
if cd_object.get_track_audio(i):
	audio_track_found = 1
	cd_object.play(i)
	pygame.time.delay(5000)
cd_object.eject()
cd_object.quit()





# see file primex.py





def binary_search(seq, t):
        min = 0; max = len(seq) - 1
        while 1:
            if max < min:
                return -1
            m = (min  + max)  / 2
            if seq[m] < t: 
                min = m  + 1 
            elif seq[m] > t: 
                max = m  - 1 
            else:
                return m    




def c_int_binary_search(seq,t):
    # do a little type checking in Python
    assert(type(t) == type(1))
    assert(type(seq) == type([]))
    
    # now the C code
    code = """
           #line 29 "binary_search.py"
           int val, m, min = 0;  
           int max = seq.length() - 1;
           PyObject *return_val; 
           for(;;) {
               if (max < min) { 
                   return_val =  Py::new_reference_to(Py::Int(-1)); 
                   break;
               } 
               m =  (min + max) /2;
               val = py_to_int(PyList_GetItem(seq.ptr(),m),"val"); 
               if (val  < t) 
                   min = m  + 1;
               else if (val >  t)
                   max = m - 1;
               else {
                    return_val = Py::new_reference_to(Py::Int(m));
                    break;
                }
           }
           """
    return inline(code,['seq','t'])




>>> from ctypes import cdll, c_double
>>> printf = cdll.msvcrt.printf
>>> printf("An int %d, a double %f\n", 1234, c_double(3.14))
An int 1234, a double 3.140000




